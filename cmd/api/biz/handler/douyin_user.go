// Code generated by hertz generator.

package handler

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/utils"
	api_user "mini-tiktok-backend/cmd/api/biz/model/api/user"
	"mini-tiktok-backend/cmd/api/biz/rpc"
	"mini-tiktok-backend/kitex_gen/user"
	"mini-tiktok-backend/pkg/errno"
)

// DouyinUser .
// @router /douyin/user/ [GET]
func DouyinUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api_user.DouyinUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		SendResponse(c, err, utils.H{})
		return
	}

	username, err := rpc.QueryUser(ctx, &user.QueryUserRequest{ // TODO: return username should be change
		UserId: req.UserID,
	})

	if err != nil {
		SendResponse(c, err, utils.H{})
		return
	}

	SendResponse(c, errno.Success, utils.H{
		"user": utils.H{
			"id":   req.UserID,
			"name": username,
			// TODO: add follow and follower count and is followed.
		},
	})

	// TODO: add User method pack user from publish service like Video method dose.
}
